{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCsEA,SAAS,EAAa,CAAE,EACtB,EAAG,YAAY,CAAC,WAAY,OAC9B,CAEA,SAAS,EAAgB,CAAE,EACzB,EAAG,eAAe,CAAC,WACrB,CA1EA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAAM,EAAS,EAAE,MAAM,CAAC,OAAO,CAAC,WAE3B,GAIL,AAGF,SAAqB,CAAI,EACvB,IAmEM,EACA,EACA,EACA,EACA,EAvEA,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAS,EAAK,OAAO,CAAC,eACtB,EAAY,EAAK,OAAO,CAAC,kBACzB,EAAY,EAAK,OAAO,CAAC,eACzB,EAAe,EAAK,OAAO,CAAC,kBAElC,OAAQ,GACN,KAAK,EACH,IAAM,EAAY,EAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,GAE1C,EAAM,MAAM,CAAC,GAEa,KAAtB,EAAM,IAAI,CAAC,MAAM,EACnB,EAAa,GAEf,KAEF,MAAK,EACH,EAAM,IAAI,CAAC,EAAM,IAAI,CAAC,MAAM,CAAG,EAAE,CAAC,MAAM,GAEd,IAAtB,EAAM,IAAI,CAAC,MAAM,EACnB,EAAa,GAGf,KAEF,MAAK,EACF,EAAG,EAAM,IAAI,EAAE,OAAO,CAAC,SAAC,CAAxB,EACC,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAG,MAAM,CAAC,EACZ,GAEmC,KAA/B,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAC5B,EAAa,GAGf,KAEF,MAAK,EACF,EAAG,EAAM,IAAI,EAAE,OAAO,CAAC,SAAC,CAAxB,EACC,EAAG,KAAK,CAAC,EAAG,KAAK,CAAC,MAAM,CAAG,EAAE,CAAC,MAAM,EACtC,GAEmC,IAA/B,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAC5B,EAAa,EAOnB,CAeM,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAY,SAAS,aAAa,CAAC,eACnC,EAAS,SAAS,aAAa,CAAC,eAChC,EAAY,SAAS,aAAa,CAAC,kBACnC,EAAe,SAAS,aAAa,CAAC,kBAExC,EAAM,IAAI,CAAC,MAAM,CAAG,GAAK,EAAU,YAAY,CAAC,YAClD,EAAgB,GACP,EAAM,IAAI,CAAC,MAAM,CAAG,IAAM,EAAO,YAAY,CAAC,YACvD,EAAgB,GAEhB,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAG,GAC7B,EAAa,YAAY,CAAC,YAE1B,EAAgB,GAEhB,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAG,IAC7B,EAAU,YAAY,CAAC,aAEvB,EAAgB,EA/BpB,EA3Dc,EACd","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\ndocument.addEventListener(\"click\", function(e) {\n    var target = e.target.closest(\".button\");\n    if (!target) return;\n    changeTable(target);\n});\nfunction changeTable(elem) {\n    var table = document.querySelector(\".field\");\n    var addRow = elem.closest(\".append-row\");\n    var addColumn = elem.closest(\".append-column\");\n    var removeRow = elem.closest(\".remove-row\");\n    var removeColumn = elem.closest(\".remove-column\");\n    switch(elem){\n        case addRow:\n            var cloneElem = table.rows[0].cloneNode(true);\n            table.append(cloneElem);\n            if (table.rows.length === 10) addAttribute(addRow);\n            break;\n        case removeRow:\n            table.rows[table.rows.length - 1].remove();\n            if (table.rows.length === 2) addAttribute(removeRow);\n            break;\n        case addColumn:\n            _to_consumable_array(table.rows).forEach(function(el) {\n                var td = document.createElement(\"td\");\n                el.append(td);\n            });\n            if (table.rows[0].cells.length === 10) addAttribute(addColumn);\n            break;\n        case removeColumn:\n            _to_consumable_array(table.rows).forEach(function(el) {\n                el.cells[el.cells.length - 1].remove();\n            });\n            if (table.rows[0].cells.length === 2) addAttribute(removeColumn);\n            break;\n        default:\n            break;\n    }\n    check();\n}\nfunction addAttribute(el) {\n    el.setAttribute(\"disabled\", \"true\");\n}\nfunction removeAttribute(el) {\n    el.removeAttribute(\"disabled\");\n}\n// checking table sizes and activating inactive buttons\nfunction check() {\n    var table = document.querySelector(\".field\");\n    var rowRemove = document.querySelector(\".remove-row\");\n    var rowAdd = document.querySelector(\".append-row\");\n    var columnAdd = document.querySelector(\".append-column\");\n    var columnRemove = document.querySelector(\".remove-column\");\n    if (table.rows.length > 2 && rowRemove.hasAttribute(\"disabled\")) removeAttribute(rowRemove);\n    else if (table.rows.length < 10 && rowAdd.hasAttribute(\"disabled\")) removeAttribute(rowAdd);\n    else if (table.rows[0].cells.length > 2 && columnRemove.hasAttribute(\"disabled\")) removeAttribute(columnRemove);\n    else if (table.rows[0].cells.length < 10 && columnAdd.hasAttribute(\"disabled\")) removeAttribute(columnAdd);\n}\n\n//# sourceMappingURL=index.c39a58fa.js.map\n","'use strict';\n\ndocument.addEventListener('click', (e) => {\n  const target = e.target.closest('.button');\n\n  if (!target) {\n    return;\n  }\n\n  changeTable(target);\n});\n\nfunction changeTable(elem) {\n  const table = document.querySelector('.field');\n  const addRow = elem.closest('.append-row');\n  const addColumn = elem.closest('.append-column');\n  const removeRow = elem.closest('.remove-row');\n  const removeColumn = elem.closest('.remove-column');\n\n  switch (elem) {\n    case addRow:\n      const cloneElem = table.rows[0].cloneNode(true);\n\n      table.append(cloneElem);\n\n      if (table.rows.length === 10) {\n        addAttribute(addRow);\n      }\n      break;\n\n    case removeRow:\n      table.rows[table.rows.length - 1].remove();\n\n      if (table.rows.length === 2) {\n        addAttribute(removeRow);\n      }\n\n      break;\n\n    case addColumn:\n      [...table.rows].forEach((el) => {\n        const td = document.createElement('td');\n\n        el.append(td);\n      });\n\n      if (table.rows[0].cells.length === 10) {\n        addAttribute(addColumn);\n      }\n\n      break;\n\n    case removeColumn:\n      [...table.rows].forEach((el) => {\n        el.cells[el.cells.length - 1].remove();\n      });\n\n      if (table.rows[0].cells.length === 2) {\n        addAttribute(removeColumn);\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  check();\n}\n\nfunction addAttribute(el) {\n  el.setAttribute('disabled', 'true');\n}\n\nfunction removeAttribute(el) {\n  el.removeAttribute('disabled');\n}\n\n// checking table sizes and activating inactive buttons\nfunction check() {\n  const table = document.querySelector('.field');\n  const rowRemove = document.querySelector('.remove-row');\n  const rowAdd = document.querySelector('.append-row');\n  const columnAdd = document.querySelector('.append-column');\n  const columnRemove = document.querySelector('.remove-column');\n\n  if (table.rows.length > 2 && rowRemove.hasAttribute('disabled')) {\n    removeAttribute(rowRemove);\n  } else if (table.rows.length < 10 && rowAdd.hasAttribute('disabled')) {\n    removeAttribute(rowAdd);\n  } else if (\n    table.rows[0].cells.length > 2 &&\n    columnRemove.hasAttribute('disabled')\n  ) {\n    removeAttribute(columnRemove);\n  } else if (\n    table.rows[0].cells.length < 10 &&\n    columnAdd.hasAttribute('disabled')\n  ) {\n    removeAttribute(columnAdd);\n  } else {\n  }\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","addAttribute","el","setAttribute","removeAttribute","document","addEventListener","e","target","closest","changeTable","elem","table","rowRemove","rowAdd","columnAdd","columnRemove","querySelector","addRow","addColumn","removeRow","removeColumn","cloneElem","rows","cloneNode","append","remove","forEach","td","createElement","cells","hasAttribute"],"version":3,"file":"index.c39a58fa.js.map"}